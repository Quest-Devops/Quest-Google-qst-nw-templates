
name: cicd

on:
  push: 
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read
  id-token: 'write'

env: 
  WORKING-DIRECTORY: network-components/template
  GH_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
  init:
    runs-on: ubuntu-latest
    defaults:
      run: 
        shell: bash       

    steps:
      # Checkout repository to GitHub action runner
      - name: Checkout
        uses: actions/checkout@v3

      - id: auth
        uses: google-github-actions/auth@v0.4.0
        with:
          workload_identity_provider: '${{ secrets.WIF }}'
          service_account: '${{ secrets.SA }}'

      # Replacing placeholders in Terraform files
      - name: Replacing placeholders
        run: |
          echo "***** Replacing placeholders with GIT_TOKEN *****"
          sed -i "s|\[PASSWORD\]|${{ env.GH_TOKEN }}|g" *.tf
        working-directory: ${{ env.WORKING-DIRECTORY }}

      # Terraform Init
      - name: Terraform Init
        working-directory: ${{ env.WORKING-DIRECTORY }}
        run: |
          terraform init 
          terraform init -upgrade 
        
        

  validate:
    runs-on: ubuntu-latest
    needs: init

    steps:
      # Checkout repository to GitHub action runner
      - name: Checkout
        uses: actions/checkout@v3

      - id: auth
        uses: google-github-actions/auth@v0.4.0
        with:
          workload_identity_provider: '${{ secrets.WIF }}'
          service_account: '${{ secrets.SA }}'

      # Replacing placeholders in Terraform files
      - name: Replacing placeholders
        run: |
          echo "***** Replacing placeholders with GIT_TOKEN *****"
          sed -i "s|\[PASSWORD\]|${{ env.GIT_TOKEN }}|g" *.tf
        working-directory: ${{ env.WORKING-DIRECTORY }}
 

  tflint:
    needs: validate
    uses: ./.github/workflows/lint.yml

  plan:
    runs-on: ubuntu-latest
    needs: tflint

    steps:
      # Checkout repository to GitHub action runner
      - name: Checkout
        uses: actions/checkout@v3

      - id: auth
        uses: google-github-actions/auth@v0.4.0
        with:
          workload_identity_provider: '${{ secrets.WIF }}'
          service_account: '${{ secrets.SA }}'

      # Replacing placeholders in Terraform files
      - name: Replacing placeholders
        run: |
          echo "***** Replacing placeholders with GIT_TOKEN *****"
          sed -i "s|\[PASSWORD\]|${{ env.GH_TOKEN }}|g" *.tf
        working-directory: ${{ env.WORKING-DIRECTORY }}

      # Terraform Plan
      - name: Terraform Plan
        working-directory: ${{ env.WORKING-DIRECTORY }}
        run: |
          terraform init -upgrade
          terraform plan   
            -var-file=vpc.tfvars \
           -var-file=subnet.tfvars \
           -var-file=firewall.tfvars \
           -var-file=peering.tfvars \
          -var-file=address.tfvars \
          -var-file=router.tfvars \
          -var-file=nat.tfvars

  apply:
    runs-on: ubuntu-latest
    needs: plan
    environment: Production
    if: github.ref == 'refs/heads/main'


    steps:
      # Checkout repository to GitHub action runner
      - name: Checkout
        uses: actions/checkout@v3

      - id: auth
        uses: google-github-actions/auth@v0.4.0
        with:
          workload_identity_provider: '${{ secrets.WIF }}'
          service_account: '${{ secrets.SA }}'

      # Replacing placeholders in Terraform files
      - name: Replacing placeholders
        run: |
          echo "***** Replacing placeholders with GIT_TOKEN *****"
          sed -i "s|\[PASSWORD\]|${{ env.GH_TOKEN }}|g" *.tf
        working-directory: ${{ env.WORKING-DIRECTORY }}

      # Terraform Apply
      - name: Terraform Apply
        working-directory: ${{ env.WORKING-DIRECTORY }}
        run: |
          terraform init -upgrade
          terraform apply -auto-approve \
           -var-file=vpc.tfvars \
           -var-file=subnet.tfvars \
           -var-file=firewall.tfvars \
           -var-file=peering.tfvars \
          -var-file=address.tfvars \
          -var-file=router.tfvars \
          -var-file=nat.tfvars
          terraform destroy --auto-approve \
                -var-file=vpc.tfvars \
           -var-file=subnet.tfvars \
           -var-file=firewall.tfvars \
           -var-file=peering.tfvars \
          -var-file=address.tfvars \
          -var-file=router.tfvars \
          -var-file=nat.tfvars

    
